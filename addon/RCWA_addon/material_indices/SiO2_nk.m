%%% SiO2의 n, k값 구하는 함수 %%%
%   - lambda : 155nm ~ 1970.09nm
%   - Using Lagrange interpolation


function result=SiO2_nk(lambda);

lambda=lambda*10^9;

SiO2_data=[155  1.702   3.2e-5  ;159  1.676   4.7e-6    ;163.1    1.653   0 ;167.5 1.633   0    ;172.2   1.616   0   ;
177.1   1.600   0   ;183.7  1.582   0   ;190.7  1.567   0   ;198.4  1.554   0   ;206.6   1.543   0   ;
213.856    1.53429 0   ;214.438    1.53371    0   ;226.747    1.52276 0   ;230.209 1.52009 0   ;237.833    1.51474  0   ;
239.938    1.51338 0   ;248.272    1.50841  0   ;265.204   1.50004  0   ;269.885    1.49805 0   ;275.278    1.49592 0   ;
280.347 1.49404 0   ;289.360    1.49099 0   ;296.728    1.48873 0   ;302.150    1.48719 0   ;330.259    1.48053 0   ;
334.148 1.47976 0   ;340.365    1.47858 0   ;346.620    1.47746 0   ;361.051    1.47512 0   ;365.015    1.47453 0   ;
404.656 1.46961 0   ;435.835    1.46669 0   ;467.816    1.46429 0   ;486.133    1.46313 0   ;508.582    1.46187 0   ;
546.074 1.46008 0   ;576.959    1.45885 0   ;579.065    1.45877 0   ;587.561    1.45847 0   ;589.262    1.45841 0   ;
643.847 1.45671 0   ;656.272    1.45637 0   ;667.815    1.45608 0   ;706.519    1.45515 0   ;852.111    1.45248 0   ;
894.350 1.45185 0   ;1013.98    1.45025 0   ;1082.97    1.44941 0   ;1128.66    1.44888 0   ;1362.2 1.44621 0;
1469.5  1.44497 0   ;1529.52    1.44427 0   ;1660.6 1.44267 0   ;1681   1.44241 0   ;1693.2 1.44226 0   ;
1709.13 1.44205 0   ;1813.07    1.44069 0   ;1970.09    1.43851 0   ];

if lambda < SiO2_data(1,1) || lambda > SiO2_data(end,1)
    warning(['Out of valid range (' num2str(SiO2_data(1,1)) ' ~ ' num2str(SiO2_data(end,1)) ' nm)']);
end

SiO2_data_length=length(SiO2_data(:,1));
for cnt=1:SiO2_data_length-1
    if (lambda>=SiO2_data(cnt,1))&(lambda<SiO2_data(cnt+1,1))
        break;
    end
end


%%% Lagrange interpolation %%%
xi=SiO2_data(cnt,1);   ni=SiO2_data(cnt,2);   ki=SiO2_data(cnt,3);
xj=SiO2_data(cnt+1,1);   nj=SiO2_data(cnt+1,2);   kj=SiO2_data(cnt+1,3);
x=lambda;

n=(x-xj)/(xi-xj)*ni+(x-xi)/(xj-xi)*nj;
k=(x-xj)/(xi-xj)*ki+(x-xi)/(xj-xi)*kj;

result=n+j*k;