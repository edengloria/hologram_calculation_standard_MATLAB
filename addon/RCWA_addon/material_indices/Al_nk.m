%%% Al n, k  
% - lambda : 250nm ~ 1000nm
% - Using Lagrange interpolation
% Palik book p. 396

function result=Al_nk(lambda)

lambda=lambda*10^9;

Al_data=[ 206.6  0.130  2.39;
          215.6  0.141  2.51;
          225.4  0.155  2.64
          236.2  0.172  2.79
          248.0  0.190  2.94
          261.0  0.209  3.11
          275.5  0.233  3.30
          291.7  0.261  3.51
          300.0  0.276  3.61
          310.0  0.294  3.74
          317.9  0.310  3.84
          326.3  0.326  3.95
          335.1  0.344  4.06
          344.4  0.364  4.17
          350.0  0.375  4.24
          354.2  0.385  4.30
          364.7  0.407  4.43
          375.7  0.432  4.56
          387.5  0.460  4.71
          400.0  0.490  4.86
          413.3  0.523  5.02
          427.5  0.558  5.20
          442.8  0.598  5.38
          450.0  0.618  5.47
          459.2  0.644  5.58
          476.9  0.695  5.80
          495.9  0.755  6.03
          500.0  0.769  6.08
          506.1  0.789  6.15
          516.6  0.826  6.28
          527.6  0.867  6.42
          539.1  0.912  6.55
          550.0  0.958  6.69
          551.0  0.963  6.70
          563.6  1.02   6.85
          576.7  1.08   7.00
          590.4  1.15   7.15
          600.0  1.20   7.26
          604.8  1.22   7.31
          619.9  1.30   7.48
          635.8  1.39   7.65
          650.0  1.47   7.79
          652.6  1.49   7.82
          670.2  1.60   8.01
          688.8  1.74   8.21
          700.0  1.83   8.31
          708.5  1.91   8.39
          729.3  2.14   8.57
          750.0  2.40   8.62
          751.4  2.41   8.62
          774.9  2.63   8.60
          799.9  2.80   8.45
          825.0  2.75   8.31
          826.6  2.74   8.31
          850.0  2.61   8.22
          855.1  2.58   8.21
          875.0  2.38   8.18
          885.6  2.24   8.21
          900.   2.06   8.30
          918.4  1.86   8.44
          925.0  1.77   8.49
          950.0  1.49   8.88
          953.7  1.47   8.95
          991.9  1.37   9.49
          1000   1.37   9.49
          1033   1.26   10.0
          1078   1.21   10.6
          1127   1.20   11.2
          1181   1.21   11.8
          1200   1.21   12.0
          1240   1.21   12.5
          1305   1.23   13.2
          1378   1.26   14.0
          1459   1.33   14.9
          1500   1.38   15.4
          1550   1.44   16.0
          1653   1.59   17.1
          1771   1.77   18.3
          1907   1.99   19.8
          2000   2.15   20.7
          2065   2.27   21.4
          2254   2.62   23.3
          2480   3.07   25.6
          2755   3.68   28.3
          3000   4.24   30.6
          3100   4.45   31.5
          3306   4.88   33.4
          3542   5.44   35.6
          3815   6.00   38.1
          4000   6.43   39.8
          4133   6.43   39.8
          4509   7.61   44.3
          4959   8.59   48.2
          5000   8.67   48.6
          5510   9.85   53.2
          6000   11.1   57.6
          6199   11.7   59.4
          6526   12.7   62.2
          6888   13.7   65.2
          7000   14.0   66.2
          7293   14.9   68.8
          7749   16.5   72.7
          8000   17.5   74.9
          8266   18.6   77.0
          8856   20.9   71.5
          9000   21.5   82.6
          9537   23.5   86.5
          10000  25.3   89.8
          10330  26.6   92.2
          11000  29.2   96.6
          11270  30.2   98.4
          12000  33.0   103
          12400  34.5   106
          13000  36.6   109
          13050  36.8   110
          13780  39.7   114
          14000  40.5   116
          14590  42.8   119
          15500  46.0   124
          16000  47.7   127
          16530  49.7   129
          17710  53.8   136
          18000  54.7   137
          19070  57.6   143
          20000  60.7   147
          20600  62.9   151
          22000  66.9   157
          22540  68.3   160
          24000  72.2   168
          24800  75.0   172
          26000  79.1   178
          27550  84.7   186
          28000  86.3   189
          30000  94.2   199
          31000  98.6   204
          32000  103    208];

this_data = Al_data ;

if min(lambda) < this_data(1,1) || max(lambda) > this_data(end,1)
    warning(['Out of valid range (' num2str(this_data(1,1)) ' ~ ' num2str(this_data(end,1)) ' nm)']);
end

in_range = (this_data(1,1) <= lambda).*(lambda <= this_data(end,1)) ;
n = in_range.*(interp1(this_data(:,1), this_data(:,2), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,2), lambda, 'linear')) ;
k = in_range.*(interp1(this_data(:,1), this_data(:,3), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,3), lambda, 'linear')) ;

result=n+j*k;