%%% Al n, k  
% - lambda : 250nm ~ 1000nm
% - Using Lagrange interpolation
% Palik book p. 284

function result=Cu_nk(lambda)

lambda=lambda*10^9;

Cu_data=[ 103.3  1.09   0.731
          112.7  1.07   0.754
          124.0  1.04   0.818
          130.5  1.03   0.867
          137.8  1.03   0.921
          145.9  1.03   0.979
          155.0  1.03   1.03
          165.3  1.01   1.09
          177.1  0.972  1.20
          190.7  0.958  1.37
          206.6  1.04   1.59
          213.8  1.10   1.67
          211.4  1.18   1.74
          229.6  1.28   1.78
          238.4  1.38   1.80
          248.0  1.47   1.78
          258.3  1.53   1.71
          269.5  1.52   1.67
          282.1  1.49   1.64
          295.2  1.42   1.64
          309.9  1.34   1.72
          326.3  1.34   1.81
          344.4  1.31   1.87
          364.6  1.27   1.95
          387.4  1.18   2.21
          413.3  1.18   2.21
          442.8  1.17   2.36
          476.8  1.15   2.50
          516.6  1.12   2.60
          539.0  1.04   2.59
          563.5  0.826  2.60
          590.4  0.468  2.81
          619.9  0.281  3.24
          652.5  0.214  3.67
          670.2  0.215  3.86
          688.0  0.213  4.05
          708.4  0.214  4.24
          729.3  0.223  4.43
          826.5  0.260  5.26
          1240   0.433  8.46
          1265   0.496  6.78
          1291   0.505  6.82
          1319   0.515  7.06
          1348   0.525  7.21
          1378   0.536  7.36
          1409   0.547  7.53
          1442   0.559  7.70
          1476   0.572  7.88
          1512   0.586  8.06
          1550   0.606  8.26
          1589   0.627  8.47
          1631   0.649  8.69
          1675   0.672  8.92
          1722   0.697  9.16
          1771   0.723  9.41
          1823   0.752  9.68
          1878   0.782  9.97
          1937   0.815  10.3
          2000   0.850  10.6
          2066   0.890  11.0
          2138   0.933  11.3
          2214   0.980  11.8
          2296   1.03   12.2
          2384   1.09   12.7
          2480   1.15   13.2
          2583   1.22   13.7
          2695   1.29   14.4
          2818   1.37   15.0
          2952   1.47   15.7
          3100   1.59   16.5
          3263   1.73   17.4
          3444   1.90   18.4
          3646   2.09   19.6
          3874   2.32   20.8
          4133   2.59   22.2
          4428   2.92   23.7
          4768   3.32   25.4
          5166   3.81   27.5
          5635   4.44   30.0
          6199   5.23   33.0
          6888   6.23   36.3
          7749   7.66   40.3
          8265   8.57   42.6
          8856   9.64   45.1
          9537   10.8   47.5];

this_data = Cu_data ;

if min(lambda) < this_data(1,1) || max(lambda) > this_data(end,1)
    warning(['Out of valid range (' num2str(this_data(1,1)) ' ~ ' num2str(this_data(end,1)) ' nm)']);
end

in_range = (this_data(1,1) <= lambda).*(lambda <= this_data(end,1)) ;
n = in_range.*(interp1(this_data(:,1), this_data(:,2), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,2), lambda, 'linear')) ;
k = in_range.*(interp1(this_data(:,1), this_data(:,3), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,3), lambda, 'linear')) ;

result=n+j*k;