%%% Au의 n, k값 구하는 함수 %%%
%   - lambda : 100nm ~ 9919nm
%   - Using Lagrange interpolation


function result=GST_am_0sccm_nk(lambda);

lambda=lambda*10^9;

Au_data=[
    
280 	1.733318 	2.007503;
290 	1.818507 	2.048189;
300 	1.903856 	2.084033; 
310 	1.989245 	2.115237;
320 	2.074306 	2.141900;
330 	2.158787 	2.164180;
340 	2.242623 	2.182276;
350 	2.325455 	2.196319;
360 	2.407162 	2.206497;
370 	2.487596 	2.212990;
380 	2.566505 	2.215975;
390 	2.643818 	2.215644;
400 	2.719426 	2.212183;
410 	2.793205 	2.205782;
420 	2.864964 	2.196643;
430 	2.934816 	2.184928;
440 	3.002561 	2.170843;
450 	3.068166 	2.154569;
460 	3.131613 	2.136281;
470 	3.192888 	2.116148;
480 	3.251979 	2.094336;
490 	3.308906 	2.070994;
500 	3.363608 	2.046304;
510 	3.416128 	2.020403;
520 	3.466513 	1.993418;
530 	3.514806 	1.965470;
540 	3.560991 	1.936712;
550 	3.605133 	1.907247;
560 	3.647311 	1.877159;
570 	3.687530 	1.846576;
580 	3.725852 	1.815586;
590 	3.762315 	1.784287;
600 	3.797030 	1.752709;
610 	3.830003 	1.720970;
620 	3.861268 	1.689162;
630 	3.890942 	1.657283;
640 	3.919065 	1.625407;
650 	3.945671 	1.593607;
660 	3.970846 	1.561895;
670 	3.994600 	1.530370;
680 	4.017024 	1.499021;
690 	4.038178 	1.467866;
700 	4.058074 	1.436997;
710 	4.076794 	1.406394;
720 	4.094382 	1.376083;
730 	4.110874 	1.346108;
740 	4.126328 	1.316460;
750 	4.140779 	1.287178;
760 	4.154274 	1.258265;
770 	4.166853 	1.229736;
780 	4.178554 	1.201603;
790 	4.189425 	1.173851;
800 	4.199492 	1.146515;
810 	4.208798 	1.119573;
820 	4.217360 	1.093083;
830 	4.225232 	1.066986;
840 	4.232435 	1.041310;
850 	4.238996 	1.016066;
860 	4.244951 	0.991230;
870 	4.250320 	0.966827;
880 	4.255134 	0.942838;
890 	4.259416 	0.919266;
900 	4.263191 	0.896105;
910 	4.266478 	0.873383;
920 	4.269304 	0.851048;
930 	4.271687 	0.829129;
940 	4.273648 	0.807610;
950 	4.275205 	0.786495;
960 	4.276378 	0.765768;
970 	4.277183 	0.745444;
980 	4.277636 	0.725511;
990 	4.277756 	0.705950;
1000 	4.277555 	0.686772;
1010 	4.277049 	0.667965;
1020 	4.276251 	0.649524;
1030 	4.275225 	0.631521;

];


this_data = Au_data ;

if min(lambda) < this_data(1,1) || max(lambda) > this_data(end,1)
    warning(['Out of valid range (' num2str(this_data(1,1)) ' ~ ' num2str(this_data(end,1)) ' nm)']);
end

in_range = (this_data(1,1) <= lambda).*(lambda <= this_data(end,1)) ;
n = in_range.*(interp1(this_data(:,1), this_data(:,2), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,2), lambda, 'linear')) ;
k = in_range.*(interp1(this_data(:,1), this_data(:,3), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,3), lambda, 'linear')) ;

result=n+j*k;