%%% Au의 n, k값 구하는 함수 %%%
%   - lambda : 100nm ~ 9919nm
%   - Using Lagrange interpolation


function result=Al_ETRI_nk(lambda);

lambda=lambda*10^9;

Au_data=[210.9	2.32114	2.74926;
215.28	2.37435	2.74458;
219.75	2.42607	2.73863;
224.32	2.47625	2.73154;
228.99	2.52483	2.72342;
233.75	2.57178	2.71441;
238.61	2.61706	2.70462;
243.57	2.66065	2.69418;
248.63	2.70252	2.68321;
253.8	2.74267	2.67182;
259.08	2.7811	2.66014;
264.46	2.81779	2.64827;
269.96	2.85276	2.63633;
275.57	2.88602	2.62444;
281.3	2.91759	2.6127;
287.15	2.94748	2.60123;
293.12	2.97572	2.59012;
299.21	3.00235	2.57949;
305.43	3.0274	2.56944;
311.78	3.05092	2.56009;
318.27	3.07295	2.55152;
324.88	3.09354	2.54384;
331.64	3.11278	2.53716;
338.53	3.13071	2.53158;
345.57	3.14744	2.5272;
352.75	3.16305	2.5241;
360.09	3.17765	2.52239;
367.57	3.19135	2.52214;
375.21	3.2043	2.52344;
383.01	3.21663	2.52634;
390.98	3.22852	2.53089;
399.1	3.24014	2.53712;
407.4	3.25169	2.54504;
415.87	3.26336	2.55461;
424.52	3.27537	2.56577;
433.34	3.28791	2.57843;
442.35	3.30119	2.59245;
451.55	3.31538	2.60764;
460.93	3.33063	2.62377;
470.52	3.34705	2.64059;
480.3	3.36471	2.6578;
490.28	3.38363	2.67509;
500.48	3.40374	2.69215;
510.88	3.42493	2.70863;
521.5	3.44703	2.72424;
532.34	3.4698	2.7387;
543.41	3.49293	2.75177;
554.71	3.51609	2.76325;
566.24	3.5389	2.77301;
578.01	3.56094	2.78099;
590.03	3.58181	2.78717;
602.3	3.60108	2.79161;
614.82	3.61834	2.79443;
627.6	3.63318	2.79581;
640.65	3.64523	2.79598;
653.96	3.65413	2.79523;
667.56	3.65957	2.79388;
681.44	3.66128	2.7923;
695.6	3.65899	2.79088;
710.07	3.65252	2.79007;
724.83	3.64168	2.7903;
739.9	3.62636	2.79209;
755.28	3.60645	2.79592;
770.98	3.58193	2.80237;
787.01	3.55278	2.81199;
803.37	3.51907	2.8254;
820.07	3.48091	2.84327;
837.12	3.4385	2.86628;
854.52	3.39213	2.8952;
872.29	3.34223	2.9308;
890.42	3.28938	2.97394;
908.93	3.23437	3.02546;
927.83	3.17824	3.0862;
947.12	3.12239	3.15693;
966.81	3.06855	3.23823;
986.91	3.01888	3.3303;
1007.43	2.97597	3.433;
1028.37	2.94266	3.54509;
1049.75	2.92186	3.6645;
1071.57	2.91609	3.78783;
1093.85	2.92695	3.9105;
1116.59	2.95445	4.02697;
1139.8	2.99659	4.13143;
1163.5	3.04916	4.21862;
1187.69	3.10599	4.28472;
1212.38	3.1596	4.32819;
1237.58	3.20212	4.35008;
1263.31	3.22631	4.3541;
1289.57	3.22651	4.34615;
1316.38	3.19922	4.33361;
1343.75	3.14347	4.32448;
1371.69	3.06079	4.32648;
1400.2	2.95487	4.34628;
1429.31	2.83102	4.38886;
1459.03	2.6955	4.45721;
1489.36	2.55471	4.55217;
1520.32	2.41446	4.67271;
1551.93	2.27947	4.81637;
1584.19	2.15305	4.97985;
1617.13	2.03717	5.15966;
1650.75	1.93262	5.35249;
1685.06	1.83938	5.55551;
1720.1	1.75691	5.76645;
1755.85	1.68439	5.98358;
1792.36	1.62089	6.20563;
1829.62	1.56548	6.43171;
1867.66	1.5173	6.66122;
1906.48	1.47557	6.89377;
1946.12	1.4396	7.12913;
1986.58	1.4088	7.36717;
2027.88	1.38267	7.60786;
2070.04	1.36078	7.8512;
2113.07	1.34275	8.09726;
2157	1.32829	8.34611;
2201.84	1.31713	8.59784;
2247.62	1.30904	8.85258;
2294.34	1.30386	9.11044;
2342.04	1.30141	9.37155;
2390.73	1.30157	9.63603;
2440.43	1.30424	9.90402;
2491.17	1.30932	10.17565;
2542.96	1.31675	10.45105;
2595.82	1.32647	10.73034;
2649.79	1.33844	11.01367;
2704.88	1.35261	11.30117;
2761.11	1.36898	11.59295;
2818.51	1.38752	11.88916;
2877.11	1.40824	12.18993;
2936.92	1.43114	12.49538;
2997.98	1.45623	12.80563;
3060.3	1.48352	13.12083;
3123.92	1.51304	13.4411;
3188.87	1.54481	13.76656;
3255.16	1.57888	14.09734;
3322.84	1.61529	14.43358;
3391.92	1.65406	14.77539;
3462.43	1.69527	15.12291;
3534.41	1.73896	15.47626;
3607.89	1.78519	15.83558;
3682.9	1.83402	16.20098;
3759.46	1.88553	16.57259;
3837.62	1.93979	16.95055;
3917.4	1.99687	17.33498;
3998.84	2.05685	17.72601;
4081.97	2.11983	18.12377;
4166.84	2.18589	18.52837;
4253.46	2.25513	18.93996;
4341.89	2.32764	19.35866;
4432.15	2.40354	19.78459;
4524.3	2.48293	20.21787;
4618.35	2.56592	20.65865;
4714.37	2.65263	21.10703;
4812.37	2.74319	21.56316;
4912.42	2.83772	22.02714;
5014.55	2.93635	22.4991;
5118.8	3.03922	22.97917;
5225.21	3.14647	23.46747;
5333.84	3.25825	23.96411;
5444.73	3.37471	24.46921;
5557.92	3.49601	24.98289;
5673.47	3.6223	25.50527;
5791.41	3.75376	26.03645;
5911.81	3.89055	26.57655;
6034.72	4.03285	27.12568;
6160.17	4.18085	27.68393;
6288.24	4.33472	28.25141;
6418.97	4.49467	28.82822;
6552.42	4.66089	29.41446;
6688.64	4.83357	30.01021;
6827.69	5.01293	30.61557;
6969.63	5.19917	31.23062;
7114.53	5.39252	31.85543;
7262.43	5.59319	32.49009;
7413.41	5.80141	33.13466;
7567.53	6.01741	33.7892;
7724.86	6.24143	34.45378;
7885.45	6.47369	35.12843;
8049.39	6.71444	35.81323;
8216.73	6.96394	36.50819;
8387.55	7.22242	37.21335;
8561.92	7.49014	37.92875;
8739.92	7.76736	38.65439;
8921.62	8.05433	39.39028;
9107.09	8.35131	40.13643;
9296.42	8.65857	40.89284;
9489.69	8.97638	41.65949;
9686.97	9.30498	42.43634;
9888.36	9.64466	43.22338;
10093.93	9.99567	44.02056;
10303.78	10.35829	44.82782;
10517.99	10.73277	45.64512;
10736.65	11.11939	46.47237;
10959.86	11.5184	47.30949;
11187.71	11.93006	48.1564;
11420.29	12.35463	49.013;
11657.71	12.79237	49.87917;
11900.07	13.24352	50.7548;
12147.46	13.70833	51.63975;
12400	14.18703	52.53389;


];


this_data = Au_data ;

if min(lambda) < this_data(1,1) || max(lambda) > this_data(end,1)
    warning(['Out of valid range (' num2str(this_data(1,1)) ' ~ ' num2str(this_data(end,1)) ' nm)']);
end

in_range = (this_data(1,1) <= lambda).*(lambda <= this_data(end,1)) ;
n = in_range.*(interp1(this_data(:,1), this_data(:,2), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,2), lambda, 'linear')) ;
k = in_range.*(interp1(this_data(:,1), this_data(:,3), lambda, 'spline'))+(1-in_range).*(interp1(this_data(:,1), this_data(:,3), lambda, 'linear')) ;

result=n+j*k;